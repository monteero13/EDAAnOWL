name: EDAAnOWL CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

# Necesario para poder hacer commit de /documentation
permissions:
  contents: write

concurrency:
  group: edaanowl-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: "üîç Validate ontology & examples"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install rdflib pyshacl requests

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'   # ROBOT funciona bien con 17

      - name: Download ROBOT
        run: |
          wget -q -O robot.jar https://github.com/ontodev/robot/releases/download/v1.9.4/robot.jar
          java -jar robot.jar --version

      - name: RDF syntax check (rdflib via script)
        run: python docs/scripts/check_rdf.py

      - name: OWL profile & basic consistency (ROBOT)
        run: |
          mkdir -p reports
          # validate: perfil OWL, PURLs, IRIs, etc.
          java -jar robot.jar validate --input docs/ontology/edaan-owl.ttl --output reports/robot-validate.tsv || true
          echo "ROBOT validate report:"
          cat reports/robot-validate.tsv || true

          # reason + report (clasificaci√≥n con ELK; solo informativo)
          java -jar robot.jar reason --input docs/ontology/edaan-owl.ttl --reasoner ELK --output reports/edaan-owl-classified.ttl || true

      - name: SHACL (minimal example MUST pass)
        run: |
          mkdir -p reports
          pyshacl -s docs/shapes/edaan-shapes.ttl -d docs/examples/minimal-example.ttl -m -f human -o reports/shacl-minimal.txt
          echo "üìÑ SHACL (minimal):"
          cat reports/shacl-minimal.txt
          if grep -qi "violation" reports/shacl-minimal.txt; then
            echo "‚ùå SHACL violations in minimal example"
            exit 1
          fi

      - name: SHACL (ontology info-only)
        run: |
          pyshacl -s docs/shapes/edaan-shapes.ttl -d docs/ontology/edaan-owl.ttl -m -f human -o reports/shacl-ontology.txt || true
          echo "üìÑ SHACL (ontology):"
          cat reports/shacl-ontology.txt || true

      - name: Validate all examples (info-only)
        run: |
          mkdir -p reports
          for ex in docs/examples/*.ttl docs/examples/**/*.ttl; do
            if [ -f "$ex" ]; then
              echo "Validating example: $ex"
              java -jar robot.jar verify --input "$ex" --output-dir reports/ || echo "‚ö†Ô∏è Issues in $ex"
            fi
          done

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: validation-reports
          path: reports/
          retention-days: 30

  docs:
    name: "üìö Build Widoco docs -> /docs/ontology"
    runs-on: ubuntu-latest
    needs: validate
    # Solo generamos docs en pushes a la rama principal (evita PRs escribiendo en /docs/ontology)
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 11 (Widoco)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Java 17 (ROBOT)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download ROBOT
        run: |
          wget -q -O robot.jar https://github.com/ontodev/robot/releases/download/v1.9.4/robot.jar
          java -jar robot.jar --version

      # Cachea la carpeta .cache/widoco y usa una ruta estable para el jar
      - name: Cache Widoco jar
        id: cache-widoco
        uses: actions/cache@v4
        with:
          path: .cache/widoco
          key: widoco-1.4.5

      - name: Download Widoco
        if: steps.cache-widoco.outputs.cache-hit != 'true'
        run: |
          set -e
          mkdir -p .cache/widoco
          WIDOCO_VERSION=1.4.5
          curl -fL "https://github.com/dgarijo/Widoco/releases/download/v${WIDOCO_VERSION}/widoco-${WIDOCO_VERSION}-jar-with-dependencies.jar" \
            -o .cache/widoco/widoco.jar
          test -s .cache/widoco/widoco.jar
          java -jar .cache/widoco/widoco.jar -version

      - name: Verify ontology file exists
        run: |
          if [ ! -f "docs/ontology/edaan-owl.ttl" ]; then
            echo "‚ùå Error: ontology file not found at docs/ontology/edaan-owl.ttl"
            exit 1
          fi
          echo "‚úÖ Ontology file found: docs/ontology/edaan-owl.ttl"

      - name: Build docs with Widoco (to /docs/ontology)
        run: |
          set -e
          WIDOCO_JAR=.cache/widoco/widoco.jar
          OUT_DIR="docs/ontology"
          ONT_PATH="docs/ontology/edaan-owl.ttl"
          
          test -s "$WIDOCO_JAR" || { echo "Widoco jar not found at $WIDOCO_JAR"; exit 1; }
          test -f "$ONT_PATH" || { echo "Ontology file not found at $ONT_PATH"; exit 1; }

          echo "Building documentation for: $ONT_PATH"
          echo "Output directory: $OUT_DIR"

          # Limpieza selectiva: solo eliminar lo que genera Widoco, no la ontolog√≠a original
          rm -rf "$OUT_DIR/doc" \
                 "$OUT_DIR/WebVowl" \
                 "$OUT_DIR/sections" \
                 "$OUT_DIR/Ontology"* \
                 "$OUT_DIR/index.html" \
                 "$OUT_DIR/index-en.html" \
                 "$OUT_DIR/.htaccess" \
                 "$OUT_DIR/edaan-owl.owl" \
                 "$OUT_DIR/edaan-owl.jsonld" \
                 "$OUT_DIR/edaan-owl.rdf" \
                 "$OUT_DIR/edaan-owl.nt"

          # Genera doc desde la ontolog√≠a en /docs/ontology
          java -jar "$WIDOCO_JAR" \
            -ontFile "$ONT_PATH" \
            -outFolder "$OUT_DIR" \
            -getOntologyMetadata \
            -rewriteAll \
            -webVowl \
            -htaccess \
            -lang en

          # Generar formatos adicionales usando ROBOT
          echo "Generating additional formats..."
          java -jar robot.jar convert --input "$ONT_PATH" --output "$OUT_DIR/edaan-owl.owl" --format owl
          java -jar robot.jar convert --input "$ONT_PATH" --output "$OUT_DIR/edaan-owl.jsonld" --format jsonld
          java -jar robot.jar convert --input "$ONT_PATH" --output "$OUT_DIR/edaan-owl.rdf" --format rdfxml
          java -jar robot.jar convert --input "$ONT_PATH" --output "$OUT_DIR/edaan-owl.nt" --format nt

          # Mover documentaci√≥n de doc/ al directorio principal
          if [ -d "$OUT_DIR/doc" ]; then
            echo "Moving documentation from doc/ to root..."
            mv "$OUT_DIR"/doc/* "$OUT_DIR"/
            rmdir "$OUT_DIR/doc"
            
            # Actualizar rutas en .htaccess
            if [ -f "$OUT_DIR/.htaccess" ]; then
              sed -i 's|/doc/|/|g' "$OUT_DIR/.htaccess"
              sed -i 's|doc/||g' "$OUT_DIR/.htaccess"
            fi
            
            # Actualizar rutas en archivos HTML
            find "$OUT_DIR" -name "*.html" -type f -exec sed -i 's|href="doc/|href="|g' {} \;
            find "$OUT_DIR" -name "*.html" -type f -exec sed -i 's|src="doc/|src="|g' {} \;
            find "$OUT_DIR" -name "*.html" -type f -exec sed -i 's|url(/doc/|url(/|g' {} \;
          fi

          # Alias a index.html
          if [ -f "$OUT_DIR/index-en.html" ]; then
            cp "$OUT_DIR/index-en.html" "$OUT_DIR/index.html"
          fi

          echo "‚úÖ Final content in $OUT_DIR:"
          ls -la "$OUT_DIR/"

      - name: Upload built docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: widoco-documentation
          path: docs/ontology/
          retention-days: 14

      - name: Commit and push documentation
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/ontology/
          git diff --cached --quiet || git commit -m "chore(docs): regenerate Widoco documentation"
          git push