name: EDAAnOWL CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: edaanowl-${{ github.ref }}
  cancel-in-progress: true

env:
  ONT_PATH: docs/ontology/edaan-owl.ttl
  SHAPES_PATH: docs/shapes/edaan-shapes.ttl

jobs:
  # 1) Detecta si cambió la ontología
  changes:
    name: "🧭 Detect ontology changes"
    runs-on: ubuntu-latest
    outputs:
      ontology_changed: ${{ steps.filter.outputs.ontology }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necesario para diff correcto
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ontology:
              - ${{ env.ONT_PATH }}

  # 2) Validación (se ejecuta siempre)
  validate:
    name: "🔍 Validate ontology & examples"
    runs-on: ubuntu-latest
    needs: changes
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install rdflib pyshacl requests

      - name: Setup Java (ROBOT)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download ROBOT
        run: |
          wget -q -O robot.jar https://github.com/ontodev/robot/releases/download/v1.9.4/robot.jar
          java -jar robot.jar --version

      - name: RDF syntax check (rdflib via script)
        run: python docs/scripts/check_rdf.py

      - name: OWL profile & basic consistency (ROBOT)
        run: |
          mkdir -p reports
          java -jar robot.jar validate --input "$ONT_PATH" --output reports/robot-validate.tsv || true
          echo "ROBOT validate report:"
          cat reports/robot-validate.tsv || true
          java -jar robot.jar reason --input "$ONT_PATH" --reasoner ELK --output reports/edaan-owl-classified.ttl || true

      - name: SHACL (minimal example MUST pass)
        run: |
          mkdir -p reports
          pyshacl -s "$SHAPES_PATH" -d docs/examples/minimal-example.ttl -m -f human -o reports/shacl-minimal.txt
          echo "📄 SHACL (minimal):"
          cat reports/shacl-minimal.txt
          if grep -qi "violation" reports/shacl-minimal.txt; then
            echo "❌ SHACL violations in minimal example"
            exit 1
          fi

      - name: SHACL (ontology info-only)
        run: |
          pyshacl -s "$SHAPES_PATH" -d "$ONT_PATH" -m -f human -o reports/shacl-ontology.txt || true
          echo "📄 SHACL (ontology):"
          cat reports/shacl-ontology.txt || true

      - name: Validate all examples (info-only)
        run: |
          mkdir -p reports
          for ex in docs/examples/*.ttl docs/examples/*/*.ttl; do
            if [ -f "$ex" ]; then
              echo "Validating example: $ex"
              java -jar robot.jar verify --input "$ex" --output-dir reports/ || echo "⚠️ Issues in $ex"
            fi
          done

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: validation-reports
          path: reports/
          retention-days: 30

  # 3) Docs (solo cuando cambia la ontología o ejecución manual)
  docs:
    name: "📚 Build Widoco docs -> /docs/ontology"
    runs-on: ubuntu-latest
    needs: [changes, validate]
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && needs.changes.outputs.ontology_changed == 'true')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 11 (Widoco)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Widoco jar
        id: cache  # Add an id to the cache step
        uses: actions/cache@v4
        with:
          path: widoco.jar
          key: widoco-1.4.5
      - name: Download Widoco
        if: steps.cache.outputs.cache-hit != 'true' && steps.cache.outputs.cache-hit != ''
        run: |
          WIDOCO_VERSION=1.4.5
          wget -q "https://github.com/dgarijo/Widoco/releases/download/v${WIDOCO_VERSION}/widoco-${WIDOCO_VERSION}-jar-with-dependencies.jar" -O widoco.jar
          java -jar widoco.jar -version

      - name: Build docs with Widoco (to /docs/ontology)
        env:
          OUT_DIR: docs/ontology
        run: |
          mkdir -p "$OUT_DIR"
          # Limpieza selectiva: elimina SOLO lo que genera Widoco
          rm -rf "$OUT_DIR/doc" \
                 "$OUT_DIR/WebVowl" \
                 "$OUT_DIR/sections" \
                 "$OUT_DIR/Ontology*" \
                 "$OUT_DIR/index.html" \
                 "$OUT_DIR/index-en.html" \
                 "$OUT_DIR/.htaccess"

          java -jar widoco.jar \
            -ontFile "$ONT_PATH" \
            -outFolder "$OUT_DIR" \
            -getOntologyMetadata \
            -rewriteAll \
            -webVowl \
            -htaccess \
            -lang en

          if [ -f "$OUT_DIR/index-en.html" ]; then
            cp "$OUT_DIR/index-en.html" "$OUT_DIR/index.html"
          fi

      - name: Upload built docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: widoco-documentation
          path: docs/ontology/doc/
          retention-days: 14

      - name: Commit and push documentation
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/ontology/
          git diff --cached --quiet || git commit -m "chore(docs): regenerate Widoco documentation (ontology changed)"
          git push
